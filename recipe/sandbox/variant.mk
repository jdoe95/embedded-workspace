# recipe/sandbox/vairant.mk
CC := gcc -c -std=c99
CC += -Wall -Wextra -Wpedantic
CC += -g3 -Og
CC += -fsanitize=address
CC += -fsanitize=pointer-compare
CC += -fsanitize=pointer-subtract
CC += -fsanitize=leak
CC += -fsanitize=shift-exponent
CC += -fsanitize=shift-base
CC += -fsanitize=integer-divide-by-zero
CC += -fsanitize=unreachable
CC += -fsanitize=vla-bound
CC += -fsanitize=null
CC += -fsanitize=return
CC += -fsanitize=signed-integer-overflow
CC += -fsanitize=bounds
CC += -fsanitize=bounds-strict
CC += -fsanitize=alignment
CC += -fsanitize=object-size
CC += -fsanitize=float-cast-overflow
CC += -fsanitize=bool
CC += -fsanitize=enum
CC += -fsanitize=vptr
CC += -fsanitize=pointer-overflow
CC += -fsanitize=builtin
CC += -fsanitize-address-use-after-scope
CC += -fcf-protection=full
CC += -fstack-protector-all
CC += -fstack-check=specific
CC += -fprofile-arcs -ftest-coverage
CC += $(addprefix -D,$(DEFS-y))
CC += -I$(D_INC)

CPP := g++ -c -std=c++17
CPP += -Wall -Wextra -Wpedantic
CPP += -g3 -Og
CPP += -fsanitize=address
CPP += -fsanitize=pointer-compare
CPP += -fsanitize=pointer-subtract
CPP += -fsanitize=leak
CPP += -fsanitize=shift-exponent
CPP += -fsanitize=shift-base
CPP += -fsanitize=integer-divide-by-zero
CPP += -fsanitize=unreachable
CPP += -fsanitize=vla-bound
CPP += -fsanitize=null
CPP += -fsanitize=return
CPP += -fsanitize=signed-integer-overflow
CPP += -fsanitize=bounds
CPP += -fsanitize=bounds-strict
CPP += -fsanitize=alignment
CPP += -fsanitize=object-size
CPP += -fsanitize=float-cast-overflow
CPP += -fsanitize=bool
CPP += -fsanitize=enum
CPP += -fsanitize=vptr
CPP += -fsanitize=pointer-overflow
CPP += -fsanitize=builtin
CPP += -fsanitize-address-use-after-scope
CPP += -fcf-protection=full
CPP += -fstack-protector-all
CPP += -fstack-check=specific
CPP += -fprofile-arcs -ftest-coverage
CPP += $(addprefix -D,$(DEFS-y))
CPP += $(addprefix -D,$(CPPDEFS-y))
CPP += -I$(D_INC)

LD := g++
LD += -g3 -Og
LD += -fsanitize=address
LD += -fsanitize=pointer-compare
LD += -fsanitize=pointer-subtract
LD += -fsanitize=leak
LD += -fsanitize=shift-exponent
LD += -fsanitize=shift-base
LD += -fsanitize=integer-divide-by-zero
LD += -fsanitize=unreachable
LD += -fsanitize=vla-bound
LD += -fsanitize=null
LD += -fsanitize=return
LD += -fsanitize=signed-integer-overflow
LD += -fsanitize=bounds
LD += -fsanitize=bounds-strict
LD += -fsanitize=alignment
LD += -fsanitize=object-size
LD += -fsanitize=float-cast-overflow
LD += -fsanitize=bool
LD += -fsanitize=enum
LD += -fsanitize=vptr
LD += -fsanitize=pointer-overflow
LD += -fsanitize=builtin
LD += -fsanitize-address-use-after-scope
LD += -fcf-protection=full
LD += -fstack-protector-all
LD += -fstack-check=specific
LD += -fprofile-arcs -ftest-coverage
LD += -lpthread
LD += -lc

OBJ_TREE := $(addprefix $(D_BUILD)/,$(addsuffix .o,$(SRC_TREE)))
COVERAGE := platform

# header file dependencies generated by compiler
-include $(OBJ_TREE:%.o=%.d)

$(D_BUILD)/test-runner: $(OBJ_TREE) | $(OBJDIR_TREE)
	$(LD) -o $@ $(OBJ_TREE)

$(D_BUILD)/%.c.o: %.c | $(OBJDIR_TREE)
	$(CC) -MMD -MP -MF $(@:%.o=%.d) -MT $@ -o $@ $<

$(D_BUILD)/%.cc.o: %.cc | $(OBJDIR_TREE)
	$(CPP) -MMD -MP -MF $(@:%.o=%.d) -MT $@ -o $@ $<


.PHONY: help
help: basic-help
	$(ECHO) 'make variant\n\tMakes and runs test-runner.\n'
	$(ECHO) 'make coverage\n\tMakes coverage report from running tests.\n'
	$(ECHO) 'make build/sandbox/test-runner\n\tOnly makes test-runner.\n'
	$(ECHO) 'make build/sandbox/source/*.c.o'
	$(ECHO) 'make build/sandbox/source/*.cc.o'
	$(ECHO) '\tOnly makes the corresponding C/C++ object files.\n'

.PHONY: variant
variant: $(D_BUILD)/test-runner
	$(D_BUILD)/test-runner

.PHONY: coverage
coverage: $(D_BUILD)/coverage/index.html

.PHONY: test-report
test-report: $(D_BUILD)/test-report.html

$(D_BUILD)/test-report.xml: $(D_BUILD)/test-runner
	$(D_BUILD)/test-runner --gtest_output=xml:$@

$(D_BUILD)/test-report.html: $(D_BUILD)/test-report.xml
	xsltproc -o $@ tool/gtest2html.xslt $<

$(D_BUILD)/coverage.info: D_COVERAGE := $(D_BUILD)/$(D_SRC)
$(D_BUILD)/coverage.info: $(D_BUILD)/test-report.xml
	geninfo -b . --no-external -o $@ $(addprefix $(D_COVERAGE)/,$(COVERAGE))

$(D_BUILD)/coverage:
	$(MKDIR) $@

$(D_BUILD)/coverage/index.html: $(D_BUILD)/coverage.info | $(D_BUILD)/coverage
	genhtml $< --output-directory $(@D)
